{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","reportWebVitals.js","index.js"],"names":["props","onClick","e","click","label","className","operation","double","triple","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","eval","n","includes","newDisplayValue","i","newValue","parseFloat","console","log","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.340e6772.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nexport default props => {\n    return (\n        <button \n            onClick={e => props.click && props.click(props.label)}\n            className={`button\n            ${props.operation ? 'operation' : ''}\n            ${props.double ? 'double' : ''}\n            ${props.triple ? 'triple' : ''}\n        `}>\n            {props.label}\n        </button>\n    )\n}","import React, { Component } from 'react'\nimport './Calculator.css'\n\nimport Button from '../components/Button'\nimport Display from '../components/Display'\n\nconst initialState = {\n\tdisplayValue: '0',\n\tclearDisplay: false,\n\toperation: null,\n\tvalues: [0, 0],\n\tcurrent: 0\n}\n\nexport default class Calculator extends Component {\n\tstate = { ...initialState }\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.clearMemory = this.clearMemory.bind(this)\n\t\tthis.setOperation = this.setOperation.bind(this)\n\t\tthis.addDigit = this.addDigit.bind(this)\n\t}\n\n\tclearMemory() {\n\t\tthis.setState({ ...initialState })\n\t}\n\n\tsetOperation(operation) {\n\t\tif (this.state.current === 0) {\n\t\t\tthis.setState({operation, current: 1, clearDisplay: true})\n\t\t} else {\n\t\t\tconst equals = operation === '='\n\t\t\tconst currentOperation = this.state.operation\n\t\t\tconst values = [...this.state.values]\n\t\t\ttry {\n\t\t\t\tvalues[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\n\t\t\t} catch(e) {\n\t\t\t\tvalues[0] = this.state.values[0]\n\t\t\t}\n\t\t\tvalues[1] = 0\n\n\t\t\tthis.setState({\n\t\t\t\tdisplayValue: values[0],\n\t\t\t\toperation: equals ? null : operation,\n\t\t\t\tcurrent: equals ? 0 : 1,\n\t\t\t\tclearDisplay: !equals,\n\t\t\t\tvalues\n\t\t\t})\n\t\t}\n\t}\n\n\taddDigit(n) {\n\t\tif (n === '.' && this.state.displayValue.includes('.')) {\n\t\t\treturn\n\t\t}\n\n\t\tconst clearDisplay = this.state.displayValue === '0'\n\t\t\t|| this.state.clearDisplay // Evita os zeros a esquerda\n\t\tconst currentValue = clearDisplay ? '' : this.state.displayValue\n\t\tconst newDisplayValue = currentValue + n\n\t\tthis.setState({ displayValue: newDisplayValue, clearDisplay: false })\n\n\t\tif (n !== '.') {\n\t\t\tconst i = this.state.current\n\t\t\tconst newValue = parseFloat(newDisplayValue)\n\t\t\tconst values = [...this.state.values]\n\t\t\tvalues[i] = newValue\n\t\t\tthis.setState({ values })\n\t\t\tconsole.log(values);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"calculator\">\n\t\t\t\t<Display value={this.state.displayValue} />\n\t\t\t\t<Button label=\"AC\" click={this.clearMemory} triple />\n\t\t\t\t<Button label=\"/\" click={this.setOperation} operation />\n\t\t\t\t<Button label=\"7\" click={this.addDigit} />\n\t\t\t\t<Button label=\"8\" click={this.addDigit} />\n\t\t\t\t<Button label=\"9\" click={this.addDigit} />\n\t\t\t\t<Button label=\"*\" click={this.setOperation} operation />\n\t\t\t\t<Button label=\"4\" click={this.addDigit} />\n\t\t\t\t<Button label=\"5\" click={this.addDigit} />\n\t\t\t\t<Button label=\"6\" click={this.addDigit} />\n\t\t\t\t<Button label=\"-\" click={this.setOperation} operation />\n\t\t\t\t<Button label=\"1\" click={this.addDigit} />\n\t\t\t\t<Button label=\"2\" click={this.addDigit} />\n\t\t\t\t<Button label=\"3\" click={this.addDigit} />\n\t\t\t\t<Button label=\"+\" click={this.setOperation} operation />\n\t\t\t\t<Button label=\"0\" click={this.addDigit} double />\n\t\t\t\t<Button label=\".\" click={this.addDigit} />\n\t\t\t\t<Button label=\"=\" click={this.setOperation} operation />\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react'\nimport './Display.css'\n\nexport default props => {\n    return (\n        <div className=\"display\">{props.value}</div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <h1>Calculadora</h1>\n      <Calculator />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}